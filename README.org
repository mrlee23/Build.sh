#+TITLE: Build.sh

* Introduction
This project provide a simple shell script for manipulate git branches automatically with Continuous Integrations.

You can release a version or publish docs on GitHub-pages just using commit message.

* How to use

1. Download source at [[https://raw.githubusercontent.com/mrlee23/Build.sh/master/build.sh]]
** example of .travis.yml
#+BEGIN_SRC yaml
before_script:
  - curl -o build.sh https://raw.githubusercontent.com/mrlee23/Build.sh/master/build.sh

after_success: if [ "$TRAVIS_BRANCH" == "master" ]; then bash build.sh release; fi
#+END_SRC

* Variables
- =GH_TOKEN= <Required> : GitHub token.
- =RELEASE_BRANCH= <Optional> : Release branch name. This branch will be checkout using orphan option.
- =RELEASE_DIR= <Optional> : Temporary directory to save exists repo data.
- =RELEASE_REGEXP= <Optional> : REGEXP for check that repo has a releasable commit.
- =RELEASE_VERSION_REGEXP= : REGEXP for detect version number.

* Commands

** Release(=release=)
- Make 'release' branch.
- Detecting released commit or not.
- Commit & Push a released commit only.
- After finished releasing sequences, will be checkout to branch selected before.
- After then, you can publish to package manager with =release= branch. (eg. npm publish)
- Commit message will be generating to "Production: <commit message> from <commit hash>".

*** Variables
**** required
- =GH_TOKEN=

**** optional
- =RELEASE_LABEL= : Default is 'Production'
- =RELEASE_BRANCH=
- =RELEASE_DIR=
- =RELEASE_REGEXP=
- =RELEASE_VERSION_REGEXP=

** Github Pages(=gh-pages=)
- Make 'gh-pages' branch.
- Always commit and push.
- Needs '.gh-pages' directory to deploy contents.
- Commit message will be generating to "Pages: <commit message> from <commit hash>".

*** Variables
**** required
- =GH_TOKEN=

**** optional
- =GH_PAGES_LABEL= : Default is 'Pages'
- =GH_PAGES_BRANCH=
- =GH_PAGES_DIR=
- =GH_PAGES_COMMIT_MSG=
